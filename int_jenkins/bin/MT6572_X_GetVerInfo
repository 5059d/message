#!/usr/bin/python

from time import *
import os
import sys
import re
from commands import *

sys.path.append('/local/int_jenkins/lib')
import xlrd
import pexpect

Project_xls="/local/int_jenkins/paramentXLS/MTK6572/"+sys.argv[1]+"_ProjectConfig.xls"
Sheet = "MT6572"

### open xls get parament
workbookSrc = xlrd.open_workbook(Project_xls)
workContent = workbookSrc.sheet_by_name(Sheet)

if 0 == workContent.nrows:
	print "No data in " + Sheet + " of " +  Project_xls
	exit(1)

###get version include daily, application and mini version
def CreateVer(project, verHead, flag):

###get version
	TelewebDaily = getoutput("ssh sl_hz_hran@10.92.32.26 ls /mfs/teleweb/%s/Daily_version | grep %s | sort | tail -1"%(project, verHead))
	TelewebAppli = getoutput("ssh sl_hz_hran@10.92.32.26 ls /mfs/teleweb/%s/appli | grep %s | sort | tail -1"%(project, verHead))
	TelewebMini = getoutput("ssh sl_hz_hran@10.92.32.26 ls /mfs/teleweb/%s/mini | grep %s | sort | tail -1"%(project, verHead))
	SubVer = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
	TelewebDaily = TelewebDaily.strip()
	TelewebAppli = TelewebAppli.strip()
### Create Daily version
	if (TelewebDaily == "") and (TelewebAppli == ""):
		DailyVer = verHead[1:4] + '1-1'
	elif (TelewebDaily == ""):
		DailyVer = TelewebAppli[1:5] + '-1'
	else:
		if str(TelewebDaily[6]) == "Z":#if TelewebDaily is the last subVer:Z ,do not +1
			DailyVer = TelewebDaily
		else:
			DailyVer = TelewebDaily[1:5] + '-' + SubVer[SubVer.index(str(TelewebDaily[6])) + 1]
		if TelewebAppli[4:5] > TelewebDaily[4:5]:
			DailyVer = TelewebAppli[1:5] + '-1'
### Create appli version
	if (TelewebAppli == ""):
		AppliVer = verHead[1:4] + '1'
	else:
		if str(TelewebAppli[4:5]) !='Z':
			AppliVer = TelewebAppli[1:4] + SubVer[SubVer.index(str(TelewebAppli[4:5])) + 1]		
### Create mini version
	if (TelewebMini == ""):
		MiniVer = verHead[1:4] + '1'
	else:
                #modify 20140519 by zhaoshie
		MiniVer = TelewebMini[1:4] + SubVer[SubVer.index(str(TelewebMini[4:5])) + 1]	


	if (flag == '-DailyVer'):
		return DailyVer
	elif (flag == '-AppliVer'):
		return AppliVer
	elif (flag == '-MiniVer') and (verHead[3:4] > 'T'):
		return MiniVer
	else:
		return 'version_erro'

### help message
def HelpInfo():
	print sys.argv[0] + ' version [-DailyVer|-AppliVer|-MiniVer|-Project|-Branch|-DelivTitle|-OfficeList|-DailyList|-ProductID|-CustStorePath|-SIMmode|-MtkProject|-BugBranch|-MtkProductID|-BugProduct|-PRMailList|-SignScript|-NFC|-MiniList|-HD|-All]\n'
	for i in range(workContent.nrows):
		rowItems = workContent.row_values(i, 0, 23)
		print rowItems[0].strip() + "\t" + rowItems[1].strip() + "\t" + rowItems[2].strip()
	exit(0)



if __name__ == '__main__':
	if len(sys.argv) < 3:
		HelpInfo()
	for i in range(workContent.nrows):
		rowItems = workContent.row_values(i, 0, 23)##read row values from 0 to 18 
		if sys.argv[1] == rowItems[0].strip():
			if (sys.argv[2] == '-DailyVer') or (sys.argv[2] == '-AppliVer') or (sys.argv[2] == '-MiniVer'):
				print CreateVer(rowItems[1].strip(), "v" + (rowItems[0].strip())[0:3], sys.argv[2])
			elif sys.argv[2] == '-Project':
				print rowItems[1].strip()
			elif sys.argv[2] == '-Branch':
				print rowItems[2].strip()
			elif sys.argv[2] == '-DelivTitle':
				print rowItems[3].strip()
			elif sys.argv[2] == '-OfficeList':
				print rowItems[4].strip()
			elif sys.argv[2] == '-DailyList':
				print rowItems[5].strip()
			elif sys.argv[2] == '-JrdProductID':
				print rowItems[6].strip()[3:]
			elif sys.argv[2] == '-CustStorePath':
				print rowItems[7].strip()
			elif sys.argv[2] == '-SIMmode':
				print rowItems[8].strip()
			elif sys.argv[2] == '-MtkProject':
				print rowItems[9].strip()
			elif sys.argv[2] == '-BugBranch':
				print rowItems[10].strip()
			elif sys.argv[2] == '-MtkProductID':
				print rowItems[11].strip()[3:]
			elif sys.argv[2] == '-BugProduct':
				print rowItems[12].strip()
			elif sys.argv[2] == '-PRMailList':
				print rowItems[13].strip()
			elif sys.argv[2] == '-SignScript':
				print rowItems[14].strip()
			elif sys.argv[2] == '-NFC':
				print rowItems[15].strip()
			elif sys.argv[2] == '-3G':
				print rowItems[16].strip()
			elif sys.argv[2] == '-MiniList':
				print rowItems[17].strip()
			elif sys.argv[2] == '-HD':
				print rowItems[18].strip()
			elif sys.argv[2] == '-DMIC':
				print rowItems[20].strip()
			elif sys.argv[2] == '-All':
				for i in range(len(rowItems)):
					print rowItems[i].strip()
			else:
				HelpInfo()
			exit(0)
	HelpInfo()
