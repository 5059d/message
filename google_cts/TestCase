
A  --->  B  
A |||  B
A|||B|||
google所以的case均继承自 AndroidTestCase

AndroidTestCase继承自 TestCase

TestCase 继承自 Assert,需要实现 Test 接口


Test 接口

	
	countTestCase()				计算需要测试的case数量

	run(TestResult result)		



TestFailure    ||||Test |||  , |||Throwable|||


TestCase 类          --->  Assert    ,   |||  Test 

	1.入口 run() 新建一个result		TestResult run()

		

	2.	void run(TestResult test)	再调用

	

		test.run(this)				将类指针作为参数传给TestResult

	3.	runBare()

		1.	setUp()			TestCase 准备工作

		2.	runTest()		-->		runMethod		--> 	runMethod.invoke(this)

		3.	tearDown()		TestCase 清理工作


TestResult 类    |||TestFailure||| ,  |||TestListener|||

	入口 run(TestCase test)

		1. 	startTest()		--> TestListener.startTest()		监听器准备

		2.	runProtected(test,p)		--> test.runBare()		将由TestCase进行测试



		3.	endTest()		-->	TestListener.endTest()			监听器结束

MetricTestCase 类   --->   TestCase

	继承自TestCase

	addTestMetric		将一些键值对放入mMetric

	addTestLog			--> LogHolder()							保存Log信息


DeviceTestCase 类     --->   MetricTestCase  ,  ||| IDeviceTest,  |||  IRemoteTest,  |||  ITestCollector,  ||| ITestFilterReceiver, ||| ITestAnnotationFilterReceiver |||

	继承自MetricTestCase

	getDevice

	setDevice(ITestDevice device)

	countTestCase()

	run(ITestInvocationListener listener)			--> JunitRunUntil.runTest(result) 调用JunitTest类

IDeviceTest    --->   INativeDevice

INativeDevice

	public abstract IDevice getIDevice();
	...



JunitRunUntil 类

	runTest(ITestInvocationListener listener,Test juniTest)

								-->	调用ITestInvocationListener 的监听动作。

								--> 调用Test接口的run函数

ITestInvocationListener 接口

	继承ITestLogger接口			-->	需要实现	testLog 函数


InstrumentationTestCase 类

	继承自TestCase
	
